{"ast":null,"code":"var _jsxFileName = \"/Users/a.khayat/Documents/Project:Algo/FabriKo/client/src/components/CreateProduct.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport FormProduct from './FormProduct';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateProduct = () => {\n  _s();\n  const [productInfo, setProductInfo] = useState({\n    productName: \"\",\n    productCategory: \"\",\n    productPrice: \"\",\n    productDescription: \"\",\n    productImage1: null,\n    productImage2: null,\n    productImage3: null,\n    productImage4: null,\n    productImage5: null\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const changeHandler = e => {\n    // do it so that it can handle file uploads for all 5 images, and also the other fields\n    console.log(\"e.target.name:\", e.target.name);\n    console.log(\"e.target.value:\", e.target.value);\n    if (e.target.type === \"file\") {\n      setProductInfo({\n        ...productInfo,\n        [e.target.name]: e.target.files[0]\n      });\n    } else {\n      setProductInfo({\n        ...productInfo,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const createProduct = e => {\n    const formData = new FormData();\n    formData.append(\"productName\", productInfo.productName);\n    formData.append(\"productCategory\", productInfo.productCategory);\n    formData.append(\"productPrice\", productInfo.productPrice);\n    formData.append(\"productDescription\", productInfo.productDescription);\n    formData.append(\"productImage1\", productInfo.productImage1);\n    formData.append(\"productImage2\", productInfo.productImage2);\n    formData.append(\"productImage3\", productInfo.productImage3);\n    formData.append(\"productImage4\", productInfo.productImage4);\n    formData.append(\"productImage5\", productInfo.productImage5);\n    e.preventDefault();\n    fetch(\"http://localhost:8080/product/add\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(data => {\n      console.log(\"data: \", data);\n      // get category name from data\n      // redirect to /category/categoryName\n      var categoryName = data.product.productCategory;\n      setProductInfo({\n        productName: \"\",\n        productCategory: \"\",\n        productPrice: \"\",\n        productDescription: \"\",\n        productImage1: null,\n        productImage2: null,\n        productImage3: null,\n        productImage4: null,\n        productImage5: null\n      });\n      setErrors({});\n      navigate(\"/category/\" + categoryName);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormProduct, {\n      message: \"Create a Product\",\n      errors: errors,\n      changeHandler: changeHandler,\n      submitProduct: createProduct,\n      submitValue: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProduct, \"bldSZPlHIkX/1wvvEQYPoM3uVc4=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProduct;\nexport default CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","FormProduct","useState","useNavigate","CreateProduct","productInfo","setProductInfo","productName","productCategory","productPrice","productDescription","productImage1","productImage2","productImage3","productImage4","productImage5","errors","setErrors","navigate","changeHandler","e","console","log","target","name","value","type","files","createProduct","formData","FormData","append","preventDefault","fetch","method","body","then","res","json","data","categoryName","product","catch","err"],"sources":["/Users/a.khayat/Documents/Project:Algo/FabriKo/client/src/components/CreateProduct.jsx"],"sourcesContent":["import React from 'react'\nimport FormProduct from './FormProduct'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst CreateProduct = () => {\n    const [productInfo, setProductInfo] = useState({\n        productName: \"\",\n        productCategory: \"\",\n        productPrice: \"\",\n        productDescription: \"\",\n        productImage1: null,\n        productImage2: null,\n        productImage3: null,\n        productImage4: null,\n        productImage5: null\n    })\n    const [errors, setErrors] = useState({})\n    const navigate = useNavigate()\n\n    const changeHandler = (e) => {\n      // do it so that it can handle file uploads for all 5 images, and also the other fields\n      console.log(\"e.target.name:\", e.target.name)\n      console.log(\"e.target.value:\", e.target.value)\n      if (e.target.type === \"file\") {\n        setProductInfo({\n          ...productInfo,\n          [e.target.name]: e.target.files[0]\n        })\n      } else {\n        setProductInfo({\n          ...productInfo,\n          [e.target.name]: e.target.value\n        })\n      }\n  }\n\n    const createProduct = (e) => {\n      const formData = new FormData()\n      formData.append(\"productName\", productInfo.productName)\n      formData.append(\"productCategory\", productInfo.productCategory)\n      formData.append(\"productPrice\", productInfo.productPrice)\n      formData.append(\"productDescription\", productInfo.productDescription)\n      formData.append(\"productImage1\", productInfo.productImage1)\n      formData.append(\"productImage2\", productInfo.productImage2)\n      formData.append(\"productImage3\", productInfo.productImage3)\n      formData.append(\"productImage4\", productInfo.productImage4)\n      formData.append(\"productImage5\", productInfo.productImage5)\n      e.preventDefault()\n      fetch(\"http://localhost:8080/product/add\", {\n        method: \"POST\",\n        body: formData\n      })\n        .then(res => res.json())\n        .then(data => {\n            console.log(\"data: \", data);\n            // get category name from data\n            // redirect to /category/categoryName\n            var categoryName = data.product.productCategory\n            setProductInfo({\n              productName: \"\",\n              productCategory: \"\",\n              productPrice: \"\",\n              productDescription: \"\",\n              productImage1: null,\n              productImage2: null,\n              productImage3: null,\n              productImage4: null,\n              productImage5: null\n            })\n            setErrors({})\n            navigate(\"/category/\" + categoryName)\n          \n        })\n        .catch(err => console.log(err))\n    }\n\n\n  return (\n    <div>\n      <FormProduct\n        message=\"Create a Product\"\n        errors={errors}\n        changeHandler={changeHandler}\n        submitProduct={createProduct}\n        submitValue=\"Create Product\" \n      />\n    </div>\n  )\n}\n\nexport default CreateProduct"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAA;AAE9C,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC;IAC3CK,WAAW,EAAE,EAAE;IACfC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChBC,kBAAkB,EAAE,EAAE;IACtBC,aAAa,EAAE,IAAI;IACnBC,aAAa,EAAE,IAAI;IACnBC,aAAa,EAAE,IAAI;IACnBC,aAAa,EAAE,IAAI;IACnBC,aAAa,EAAE;EACnB,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMgB,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAMgB,aAAa,GAAIC,CAAC,IAAK;IAC3B;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,CAAC,CAACG,MAAM,CAACC,IAAI,CAAC;IAC5CH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,CAAC,CAACG,MAAM,CAACE,KAAK,CAAC;IAC9C,IAAIL,CAAC,CAACG,MAAM,CAACG,IAAI,KAAK,MAAM,EAAE;MAC5BpB,cAAc,CAAC;QACb,GAAGD,WAAW;QACd,CAACe,CAAC,CAACG,MAAM,CAACC,IAAI,GAAGJ,CAAC,CAACG,MAAM,CAACI,KAAK,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLrB,cAAc,CAAC;QACb,GAAGD,WAAW;QACd,CAACe,CAAC,CAACG,MAAM,CAACC,IAAI,GAAGJ,CAAC,CAACG,MAAM,CAACE;MAC5B,CAAC,CAAC;IACJ;EACJ,CAAC;EAEC,MAAMG,aAAa,GAAIR,CAAC,IAAK;IAC3B,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE1B,WAAW,CAACE,WAAW,CAAC;IACvDsB,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE1B,WAAW,CAACG,eAAe,CAAC;IAC/DqB,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE1B,WAAW,CAACI,YAAY,CAAC;IACzDoB,QAAQ,CAACE,MAAM,CAAC,oBAAoB,EAAE1B,WAAW,CAACK,kBAAkB,CAAC;IACrEmB,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE1B,WAAW,CAACM,aAAa,CAAC;IAC3DkB,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE1B,WAAW,CAACO,aAAa,CAAC;IAC3DiB,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE1B,WAAW,CAACQ,aAAa,CAAC;IAC3DgB,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE1B,WAAW,CAACS,aAAa,CAAC;IAC3De,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE1B,WAAW,CAACU,aAAa,CAAC;IAC3DK,CAAC,CAACY,cAAc,EAAE;IAClBC,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC,CACCO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVlB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEiB,IAAI,CAAC;MAC3B;MACA;MACA,IAAIC,YAAY,GAAGD,IAAI,CAACE,OAAO,CAACjC,eAAe;MAC/CF,cAAc,CAAC;QACbC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE,EAAE;QACnBC,YAAY,EAAE,EAAE;QAChBC,kBAAkB,EAAE,EAAE;QACtBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE;MACjB,CAAC,CAAC;MACFE,SAAS,CAAC,CAAC,CAAC,CAAC;MACbC,QAAQ,CAAC,YAAY,GAAGsB,YAAY,CAAC;IAEzC,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAItB,OAAO,CAACC,GAAG,CAACqB,GAAG,CAAC,CAAC;EACnC,CAAC;EAGH,oBACE;IAAA,uBACE,QAAC,WAAW;MACV,OAAO,EAAC,kBAAkB;MAC1B,MAAM,EAAE3B,MAAO;MACf,aAAa,EAAEG,aAAc;MAC7B,aAAa,EAAES,aAAc;MAC7B,WAAW,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA;EAC5B;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GApFKxB,aAAa;EAAA,QAaED,WAAW;AAAA;AAAA,KAb1BC,aAAa;AAsFnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}